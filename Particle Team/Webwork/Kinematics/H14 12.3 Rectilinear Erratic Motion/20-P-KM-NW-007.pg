##DESCRIPTION
## Particle dynamics; Car acceleration - graphical pairing, constant acceleration then gradually increasing deceleration, find distance and time
## Created in collaboration between Douglas College Department of Physics and Astronomy
## and the University of British Columbia (UBC) Department of Mechanical Engineering. 
##
## Project led by Agnes d'Entremont and Jennifer Kirkey
##
## Contact: agnes.dentremont@mech.ubc.ca
## 	    kirkeyj@douglascollege.ca
## 
##
## This work, including related images, is licensed under the 
## Creative Commons Attribution 4.0 International (CC BY 4.0)
## <https://creativecommons.org/licenses/by/4.0/>
##
## This work was supported by funding from the BCcampus 
## ZTC (Zero Textbook Cost) Project for STEM (https://bccampus.ca/projects/open-education/zed-cred-z-degrees/ztc-open-educational-resources-for-stem/). 
##
## This work was completed on the traditional, ancestral, and unceded
## territory of many peoples - specifically the Musqueam (xʷməθkʷəy̓əm), Squamish (Sḵwx̱wú7mesh), 
## Tsleil-Waututh (səl̓ilwətaɁɬ), QayQayt, Kwikwetlem, Kwantlen, Ktunaxa, Tsawwassen (sc̓əwaθenaɁɬ təməxʷ), 
## Chemainus (Stz'uminus), Stó:lō (S’ólh Téméxw), Kwanlin Dün, Niitsitapi (Blackfoot), 
## and the people of the Treaty 7 region of Southern Alberta. 
##
## ENDDESCRIPTION
##
## DBsubject(Dynamics)
## DBchapter(Kinematics of particles)
## DBsection(Graphical solutions of rectilinear motion problems)
## Institution('University of British Columbia')
## Author(Nathan Wan)
## Date(Summer 2020)
## Difficulty(Intermediate)
## KEYWORDS('dynamics','rectilinear','particle','kinematics', 'erratic')
## RESOURCES('Content corresponds to Hibbeler (14th ed.) chapter 12, section 12.2')
##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

##############################################################
#
#  Setup
#
#

Context("Numeric");         # or Complex
#given
$acceleration = random(5,15,1);     # (lower, upper, stepsize)
$timeEvent = random(5,10,0.2);

#image scale
$imgScale = 0.8;

#image aspect ratio
$width = $imgScale*1252;
$height = $imgScale*506;

#computation
$speed = $acceleration * $timeEvent;

# let timeEvent = s
# quadratic = -t^2/4 + s*t/2 + a^2/4 - a^2/2 + as; a,b,c: -1/4, $timeEvent/2, $acceleration * $timeEvent - $acceleration**2/4

$a = -0.25;
$b = $timeEvent/2;
$c = $speed - $timeEvent**2/4;

$timeStop = (-$b - sqrt($b**2-4*$a*$c)) / (2*$a);

#set tolerance
Context()->flags->set(
tolerance=>.05,
tolType=>'absolute');  #absolute or relative

##############################################################
#
#  PGML 
#
#

BEGIN_PGML

[@ image( "20-P-KM-NW-007.png", width=>[$width], height=>[$height]) @]*

The no. 68 bus starts from rest at the bus loop and is subjected to a constant acceleration of [`a_{c} =`] [`[$acceleration]`] [`ft/s^2`] from [`t_{0} =`] [`0`] to [`[$timeEvent]`] [`s`]. As it approaches a red light, the bus then brakes to a stop at the rate shown by the graph. Determine the maximum speed [`v`] of the bus and the time [`t`] when it stops.

[`v=`][___]{"$speed"} [`ft/s`]  
[`t=`][___]{"$timeStop"} [`s`]

END_PGML

ENDDOCUMENT()];     #save as .pg