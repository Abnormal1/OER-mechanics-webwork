##DESCRIPTION
## Particle dynamics; Space elevator - find average speed given planetary measurements and elevator trip time
##ENDDESCRIPTION

## DBsubject(Dynamics)
## DBchapter(Kinematics)
## DBsection(Cylindrical Motion)
## Institution(University of British Columbia)
## Author(Nathan Wan)
## Date(2020-07-07)
## Level(Advanced)
## KEYWORDS('dynamics','cylindrical','particle','kinematics')
## RESOURCES('')

##############################################################

DOCUMENT();

loadMacros(   
	"PGstandard.pl",     # Standard macros for PG language
	"MathObjects.pl",
	"PGML.pl",
	"parserPopUp.pl",
	"parserMultiAnswer.pl",
	"parserRadioButtons.pl",
	#"source.pl",        # allows code to be displayed on certain sites.
	#"PGcourse.pl", 	 # Customization file for the course
   	);

##############################################################
#
#  Setup
#
#

Context("Numeric");         # or Complex
#given
$diameter = random(12000,13500,250);     # (lower, upper, stepsize)
$day = random(20,25,1);
$time = random(20,60,10);

#computation
$radiusAvg = ($diameter+100)/2;
$radiusP = 100/$time*60;

$thetaP = 2*pi/$day;
$speed = sqrt($radiusP**2+($radiusAvg*$thetaP)**2)/3.6;

#image scale
$imgScale = 0.6;

#image aspect ratio
$width = $imgScale*900;
$height = $imgScale*500;

#set tolerance
Context()->flags->set(
tolerance=>.05,
tolType=>'absolute');  #absolute or relative

##############################################################
#
#  PGML 
#
#

BEGIN_PGML

[@ image( "20-P-KM-NW-021.png", width=>[$width], height=>[$height]) @]*

Aerospace scientists have built a space elevator on a pseudo-Earth exoplanet that launches astronauts from sea level to the Karman line (altitude 100 km). If this planet has a diameter of [`[$diameter]`] kilometres and completes a full rotation once every [`[$day]`] hours, find the average speed of an elevator car that takes [`[$time]`] minutes to go from terminus to terminus. Assume the elevator travels at a constant speed.

_If you enter an answer as a expression of trigonometric functions, use radians._

[`v =`][___]{"$speed"} [`m/s`]   

END_PGML

ENDDOCUMENT()];     #save as .pg